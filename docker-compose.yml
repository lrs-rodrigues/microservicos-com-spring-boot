version: "3.2"

networks:
  vpcbr:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/24

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    tmpfs: "/datalog"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      vpcbr:
        ipv4_address: 10.5.0.3
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.5.0.3:29092,PLAINTEXT_HOST://10.5.0.3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      vpcbr:
        ipv4_address: 10.5.0.4
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: 10.5.0.3:29092

  discovery-service:
    build: discovery
    ports:
      - 8500:8500
    command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1 -config-file=/discovery-service/config/config.json
    volumes:
      - ./discovery/config/consul-config.json:/discovery-service/config/config.json
      - ./discovery/data:/discovery-service/data
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5

  user-db:
    image: postgres
    container_name: user-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5401:5432
    networks:
      vpcbr:
        ipv4_address: 10.5.0.6
    restart: always

  user-service:
    build: user
    container_name: user-service
    ports:
      - 7001:7001
    restart: always
    networks:
      vpcbr:
        ipv4_address: 10.5.0.7
    depends_on:
      - user-db
      - discovery-service

  catalog-db:
    image: postgres
    container_name: catalog-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5403:5432
    networks:
      vpcbr:
        ipv4_address: 10.5.0.10
    restart: always

  catalog-service:
    build: catalog
    container_name: catalog-service
    ports:
      - 7003:7003
    restart: always
    networks:
      vpcbr:
        ipv4_address: 10.5.0.11
    depends_on:
      - catalog-db
      - discovery-service

  checkout-service:
    build: checkout
    container_name: checkout-service
    ports:
      - 7004:7004
    restart: always
    networks:
      vpcbr:
        ipv4_address: 10.5.0.13
    depends_on:
      - discovery-service
      - kafka

  order-db:
    image: postgres
    container_name: order-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5405:5432
    networks:
      vpcbr:
        ipv4_address: 10.5.0.12
    restart: always

  order-service:
    build: order
    container_name: order-service
    ports:
      - 7005:7005
    restart: always
    networks:
      vpcbr:
        ipv4_address: 10.5.0.14
    depends_on:
      - order-db
      - discovery-service
      - kafka

  payment-db:
    image: postgres
    container_name: payment-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5406:5432
    networks:
      vpcbr:
        ipv4_address: 10.5.0.15
    restart: always

  payment-service:
    build: payment
    container_name: payment-service
    ports:
      - 7006:7006
    restart: always
    networks:
      vpcbr:
        ipv4_address: 10.5.0.16
    depends_on:
      - payment-db
      - discovery-service
      - kafka

  tracking-db:
    image: postgres
    container_name: tracking-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5407:5432
    networks:
      vpcbr:
        ipv4_address: 10.5.0.17
    restart: always

  tracking-service:
    build: tracking
    container_name: tracking-service
    ports:
      - 7007:7007
    restart: always
    networks:
      vpcbr:
        ipv4_address: 10.5.0.18
    depends_on:
      - tracking-db
      - discovery-service
      - kafka



